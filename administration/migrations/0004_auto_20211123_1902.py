# Generated by Django 3.2.9 on 2021-11-23 13:32

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('administration', '0003_alter_user_ip_address'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(help_text='Username of the user, to be chosen by the user themselves and should be unique.', max_length=64, unique=True, verbose_name='User Name')),
                ('first_name', models.CharField(help_text='First Name of the user', max_length=64, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, help_text='Last Name of the user', max_length=64, null=True, verbose_name='Last Name')),
                ('email_id', models.EmailField(help_text='Email ID of the user, must be unique (only 1 account with an email id)', max_length=254, unique=True, verbose_name='Email ID')),
                ('user_type', models.CharField(choices=[('s', 'Student'), ('t', 'Teacher'), ('p', 'Parent'), ('m', 'Management'), ('a', 'Administrator')], help_text='Designation/Department/Type of user', max_length=2, verbose_name='User Type')),
                ('date_of_birth', models.DateField(help_text='Date of Birth of the user', verbose_name='Date of Birth')),
                ('contact_no', models.CharField(help_text='Contact No. of the user. Must be entered in the format: "+999999999999" (with country code). Up to 15 digits allowed', max_length=17, validators=[django.core.validators.RegexValidator(message='Contact No. must be entered in the format: "+999999999999" (with country code). Up to 15 digits allowed', regex='^\\+[0-9]{5,14}$')], verbose_name='Contact No.')),
                ('address', models.TextField(blank=True, help_text='Address of the user', max_length=1024, null=True, verbose_name='Address')),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('creation_time', models.DateTimeField(help_text='Account creation time, auto-generated by server', verbose_name='Creation Time')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP Address from which the user last logged in', null=True, verbose_name='IP Address')),
                ('authorization_token', models.CharField(help_text='Authorization Token of the user to interact with the API, auto-generated', max_length=255, serialize=False, unique=True, verbose_name='Authorization Token')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='User',
        ),
    ]
